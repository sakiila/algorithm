//Âú® `n*m` Â§ßÂ∞èÁöÑÊ£ãÁõò‰∏≠ÔºåÊúâÈªëÁôΩ‰∏§ÁßçÊ£ãÂ≠êÔºåÈªëÊ£ãËÆ∞‰ΩúÂ≠óÊØç `"X"`, ÁôΩÊ£ãËÆ∞‰ΩúÂ≠óÊØç `"O"`ÔºåÁ©∫‰Ωô‰ΩçÁΩÆËÆ∞‰Ωú `"."`„ÄÇÂΩìËêΩ‰∏ãÁöÑÊ£ãÂ≠ê‰∏éÂÖ∂‰ªñÁõ∏ÂêåÈ¢úËâ≤ÁöÑÊ£ã
//Â≠êÂú®Ë°å„ÄÅÂàóÊàñÂØπËßíÁ∫øÂÆåÂÖ®ÂåÖÂõ¥Ôºà‰∏≠Èó¥‰∏çÂ≠òÂú®Á©∫ÁôΩ‰ΩçÁΩÆÔºâÂè¶‰∏ÄÁßçÈ¢úËâ≤ÁöÑÊ£ãÂ≠êÔºåÂàôÂèØ‰ª•ÁøªËΩ¨Ëøô‰∫õÊ£ãÂ≠êÁöÑÈ¢úËâ≤„ÄÇ
//
//![1.gif](https://pic.leetcode-cn.com/1630396029-eTgzpN-6da662e67368466a96d203
//f67bb6e793.gif){:height=170px}![2.gif](https://pic.leetcode-cn.com/1630396240-
//nMvdcc-8e4261afe9f60e05a4f740694b439b6b.gif){:height=170px}![3.gif](https://pic.
//leetcode-cn.com/1630396291-kEtzLL-6fcb682daeecb5c3f56eb88b23c81d33.gif){:height=170
//px}
//
//„ÄåÂäõÊâ£ÊåëÊàòËµõ„ÄçÈªëÁôΩÁøªËΩ¨Ê£ãÈ°πÁõÆ‰∏≠ÔºåÂ∞ÜÊèê‰æõÁªôÈÄâÊâã‰∏Ä‰∏™Êú™ÂΩ¢ÊàêÂèØÁøªËΩ¨Ê£ãÂ≠êÁöÑÊ£ãÁõòÊÆãÂ±ÄÔºåÂÖ∂Áä∂ÊÄÅËÆ∞‰Ωú `chessboard`„ÄÇËã•‰∏ã‰∏ÄÊ≠•ÂèØÊîæÁΩÆ‰∏ÄÊûöÈªëÊ£ãÔºåËØ∑ÈóÆÈÄâÊâãÊúÄÂ§öËÉΩÁøªËΩ¨
//Â§öÂ∞ëÊûöÁôΩÊ£ã„ÄÇ
//
//**Ê≥®ÊÑèÔºö**
//- Ëã•ÁøªËΩ¨ÁôΩÊ£ãÊàêÈªëÊ£ãÂêéÔºåÊ£ãÁõò‰∏ä‰ªçÂ≠òÂú®ÂèØ‰ª•ÁøªËΩ¨ÁöÑÁôΩÊ£ãÔºåÂ∞ÜÂèØ‰ª• **ÁªßÁª≠** ÁøªËΩ¨ÁôΩÊ£ã
//- ËæìÂÖ•Êï∞ÊçÆ‰øùËØÅÂàùÂßãÊ£ãÁõòÁä∂ÊÄÅÊó†ÂèØ‰ª•ÁøªËΩ¨ÁöÑÊ£ãÂ≠ê‰∏îÂ≠òÂú®Á©∫‰Ωô‰ΩçÁΩÆ
//
//**Á§∫‰æã 1Ôºö**
//
//> ËæìÂÖ•Ôºö`chessboard = ["....X.","....X.","XOOO..","......","......"]`
//>
//> ËæìÂá∫Ôºö`3`
//>
//> Ëß£ÈáäÔºö
//> ÂèØ‰ª•ÈÄâÊã©‰∏ãÂú® `[2,4]` Â§ÑÔºåËÉΩÂ§üÁøªËΩ¨ÁôΩÊñπ‰∏âÊûöÊ£ãÂ≠ê„ÄÇ
//
//**Á§∫‰æã 2Ôºö**
//
//> ËæìÂÖ•Ôºö`chessboard = [".X.",".O.","XO."]`
//>
//> ËæìÂá∫Ôºö`2`
//>
//> Ëß£ÈáäÔºö
//> ÂèØ‰ª•ÈÄâÊã©‰∏ãÂú® `[2,2]` Â§ÑÔºåËÉΩÂ§üÁøªËΩ¨ÁôΩÊñπ‰∏§ÊûöÊ£ãÂ≠ê„ÄÇ
//> ![2126c1d21b1b9a9924c639d449cc6e65.gif](https://pic.leetcode-cn.com/16266832
//55-OBtBud-2126c1d21b1b9a9924c639d449cc6e65.gif)
//
//**Á§∫‰æã 3Ôºö**
//
//> ËæìÂÖ•Ôºö`chessboard = [".......",".......",".......","X......",".O.....","..O....
//","....OOX"]`
//>
//> ËæìÂá∫Ôºö`4`
//>
//> Ëß£ÈáäÔºö
//> ÂèØ‰ª•ÈÄâÊã©‰∏ãÂú® `[6,3]` Â§ÑÔºåËÉΩÂ§üÁøªËΩ¨ÁôΩÊñπÂõõÊûöÊ£ãÂ≠ê„ÄÇ
//> ![803f2f04098b6174397d6c696f54d709.gif](https://pic.leetcode-cn.com/16303937
//70-Puyked-803f2f04098b6174397d6c696f54d709.gif)
//
//**ÊèêÁ§∫Ôºö**
//- `1 <= chessboard.length, chessboard[i].length <= 8`
//- `chessboard[i]` ‰ªÖÂåÖÂê´ `"."„ÄÅ"O"` Âíå `"X"`
//
// Related Topics ÂπøÂ∫¶‰ºòÂÖàÊêúÁ¥¢ Êï∞ÁªÑ Áü©Èòµ üëç 37 üëé 0


package me.baobo.leetcode.editor.cn;

import java.util.Arrays;

/**
 * LCP 41 ÈªëÁôΩÁøªËΩ¨Ê£ã
 * 2023-06-21 10:22:58
 * ÊÄùË∑ØÔºö
 */
public class FHi6rV {

    public static void main(String[] args) {
        Solution solution = new FHi6rV().new Solution();
    }

    //leetcode submit region begin(Prohibit modification and deletion)
    class Solution {
        public int flipChess(String[] chessboard) {
            int row = chessboard.length;
            int col = chessboard[0].length();
            char[][] board = new char[row][col];
            for (int i = 0; i < board.length; i++) {
                for (int j = 0; j < board[i].length; j++) {
                    board[i][j] = chessboard[i].toCharArray()[j];
                }
            }
            System.out.println(Arrays.deepToString(board));

            return 0;
        }

        void count(char[][] board) {
            for (int i = 0; i < board.length; i++) {
                for (int j = 0; j < board[i].length; j++) {

                }
            }
        }

        void right(char[][] board, int a, int b) {
            int right = 0;
            while (b + 1 < board[a].length) {
                if (board[a][b + 1] == 'X') {
                    b++;
                } else if (board[a][b + 1] == 'O') {
                    right++;
                }
            }
        }
    }

//leetcode submit region end(Prohibit modification and deletion)

}